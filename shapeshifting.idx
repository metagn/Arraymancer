nimTitle	shapeshifting	shapeshifting.html	module src/arraymancer/tensor/shapeshifting		0
nim	transpose	shapeshifting.html#transpose,Tensor	proc transpose(t: Tensor): Tensor		27
nim	asContiguous	shapeshifting.html#asContiguous,Tensor[T],OrderType,bool	proc asContiguous[T](t: Tensor[T]; layout: OrderType = rowMajor; force: bool = false): Tensor[\n    T]		38
nim	reshape	shapeshifting.html#reshape,Tensor,varargs[int]	proc reshape(t: Tensor; new_shape: varargs[int]): Tensor		59
nim	reshape	shapeshifting.html#reshape,Tensor,Metadata	proc reshape(t: Tensor; new_shape: Metadata): Tensor		71
nim	flatten	shapeshifting.html#flatten,Tensor	proc flatten(t: Tensor): Tensor		83
nim	broadcast	shapeshifting.html#broadcast,Tensor[T],varargs[int]	proc broadcast[T](t: Tensor[T]; shape: varargs[int]): Tensor[T]		96
nim	broadcast	shapeshifting.html#broadcast,Tensor[T],Metadata	proc broadcast[T](t: Tensor[T]; shape: Metadata): Tensor[T]		108
nim	broadcast	shapeshifting.html#broadcast,T,varargs[int]	proc broadcast[T: SomeNumber](val: T; shape: varargs[int]): Tensor[T]		120
nim	broadcast	shapeshifting.html#broadcast,T,Metadata	proc broadcast[T: SomeNumber](val: T; shape: Metadata): Tensor[T]		141
nim	bc	shapeshifting.html#bc.t,,varargs[int]	template bc(t: (Tensor | SomeNumber); shape: varargs[int]): untyped		162
nim	bc	shapeshifting.html#bc.t,,Metadata	template bc(t: (Tensor | SomeNumber); shape: Metadata): untyped		166
nim	broadcast2	shapeshifting.html#broadcast2,Tensor[T],Tensor[T]	proc broadcast2[T](a, b: Tensor[T]): tuple[a, b: Tensor[T]]		170
nim	permute	shapeshifting.html#permute,Tensor,varargs[int]	proc permute(t: Tensor; dims: varargs[int]): Tensor		191
nim	moveaxis	shapeshifting.html#moveaxis,Tensor,Natural,Natural	proc moveaxis(t: Tensor; initial: Natural; target: Natural): Tensor		212
nim	concat	shapeshifting.html#concat,varargs[Tensor[T]],int	proc concat[T](t_list: varargs[Tensor[T]]; axis: int): Tensor[T]		243
nim	append	shapeshifting.html#append,Tensor[T],Tensor[T]	proc append[T](t: Tensor[T]; values: Tensor[T]): Tensor[T]		279
nim	append	shapeshifting.html#append,Tensor[T],varargs[T]	proc append[T](t: Tensor[T]; values: varargs[T]): Tensor[T]		316
nim	squeeze	shapeshifting.html#squeeze,AnyTensor	proc squeeze(t: AnyTensor): AnyTensor		359
nim	squeeze	shapeshifting.html#squeeze,Tensor,Natural	proc squeeze(t: Tensor; axis: Natural): Tensor		368
nim	unsqueeze	shapeshifting.html#unsqueeze,Tensor,Natural	proc unsqueeze(t: Tensor; axis: Natural): Tensor		378
nim	stack	shapeshifting.html#stack,varargs[Tensor[T]],Natural	proc stack[T](tensors: varargs[Tensor[T]]; axis: Natural = 0): Tensor[T]		389
nim	split	shapeshifting.html#split,Tensor[T],Positive,Natural	proc split[T](t: Tensor[T]; chunk_size: Positive; axis: Natural): seq[Tensor[T]]		399
nim	chunk	shapeshifting.html#chunk,Tensor[T],Positive,Natural	proc chunk[T](t: Tensor[T]; nb_chunks: Positive; axis: Natural): seq[Tensor[T]]		415
nim	roll	shapeshifting.html#roll,Tensor[T],int	proc roll[T](t: Tensor[T]; shift: int): Tensor[T]		445
nim	roll	shapeshifting.html#roll,Tensor[T],int,Natural	proc roll[T](t: Tensor[T]; shift: int; axis: Natural): Tensor[T]		485
nimgrp	squeeze	shapeshifting.html#squeeze-procs-all	proc		359
nimgrp	roll	shapeshifting.html#roll-procs-all	proc		445
nimgrp	broadcast	shapeshifting.html#broadcast-procs-all	proc		96
nimgrp	append	shapeshifting.html#append-procs-all	proc		279
nimgrp	reshape	shapeshifting.html#reshape-procs-all	proc		59
nimgrp	bc	shapeshifting.html#bc-templates-all	template		162
heading	1     2     3     4	shapeshifting.html#Z1-2-3-4	 1     2     3     4		0
heading	1     2     3     4     5     6     7	shapeshifting.html#Z1-2-3-4-5-6-7	 1     2     3     4     5     6     7		0
heading	1     2     3     4     5     6     7	shapeshifting.html#Z1-2-3-4-5-6-7	 1     2     3     4     5     6     7		0
heading	on rank-1 tensors but first input tensor has rank 2 AssertionDefectAssertionDefect	shapeshifting.html#on-rankminus1-tensors-but-first-input-tensor-has-rank-2-assertiondefectassertiondefect	 on rank-1 tensors but first input tensor has rank 2 <a class="reference internal" href="#AssertionDefect">AssertionDefect</a>		0
